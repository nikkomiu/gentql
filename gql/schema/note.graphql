type Note implements Node {
  id: Int!
  nodeId: ID!

  title: String!
  bodyMarkdown: String!
  bodyHtml: String!

  createdAt: Time!
  updatedAt: Time!
}

type NoteConnection {
  edges: [NoteEdge]
  pageInfo: PageInfo!
  totalCount: Int!
}

type NoteEdge {
  node: Note
  cursor: Cursor!
}

input NoteInput {
  title: String!
  body: String!
}

input NoteOrder {
  direction: OrderDirection!
  field: NoteOrderField
}

enum NoteOrderField {
  TITLE
  CREATED_AT
  UPDATED_AT
}

extend type Query {
  notes(
    after: Cursor,
    first: Int,
    before: Cursor,
    last: Int,
    orderBy: NoteOrder
  ): NoteConnection!
}

extend type Mutation {
  createNote(input: NoteInput!): Note!
  updateNote(id: Int!, input: NoteInput!): Note!
  deleteNote(id: Int!): Boolean!
}
